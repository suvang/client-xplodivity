name: Deploy Frontend

on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH key and environment variables
        run: |
          mkdir -p ~/.ssh

          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "$PROD_EC2_SSH_KEY" > ~/.ssh/id_rsa
            export HOST=$PROD_EC2_HOST
            export USER=$PROD_EC2_USER
            echo "HOST=$HOST" >> $GITHUB_ENV
            echo "USER=$USER" >> $GITHUB_ENV
          else
            echo "$DEV_EC2_SSH_KEY" > ~/.ssh/id_rsa
            export HOST=$DEV_EC2_HOST
            export USER=$DEV_EC2_USER
            echo "HOST=$HOST" >> $GITHUB_ENV
            echo "USER=$USER" >> $GITHUB_ENV
          fi

          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$HOST" >> ~/.ssh/known_hosts
        env:
          PROD_EC2_SSH_KEY: ${{ secrets.PROD_EC2_SSH_KEY }}
          DEV_EC2_SSH_KEY: ${{ secrets.DEV_EC2_SSH_KEY }}
          PROD_EC2_HOST: ${{ secrets.PROD_EC2_HOST }}
          DEV_EC2_HOST: ${{ secrets.DEV_EC2_HOST }}
          PROD_EC2_USER: ${{ secrets.PROD_EC2_USER }}
          DEV_EC2_USER: ${{ secrets.DEV_EC2_USER }}

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no $USER@$HOST "bash -l -c '
            set -e  # fail on first error

            echo \"üîç Current directory: \$(pwd)\"
            cd /home/$USER/$FOLDER || (echo \"‚ùå Directory /home/$USER/$FOLDER not found!\" && exit 1)
            echo \"üìÇ Listing directory:\"
            ls -la

            echo \"üîß Checking installed binaries:\"
            which node || echo \"‚ö†Ô∏è node not found\"
            which npm || echo \"‚ö†Ô∏è npm not found\"
            which pm2 || echo \"‚ö†Ô∏è pm2 not found\"

            echo \"üöÄ Deploying branch ${GITHUB_REF##*/}...\"
            git fetch origin
            git checkout ${GITHUB_REF##*/}
            git pull origin ${GITHUB_REF##*/}

            echo \"üì¶ Installing dependencies...\"
            npm install

            echo \"üèóÔ∏è Building project...\"
            npm run build

            echo \"üîÅ Restarting PM2 process...\"
            pm2 stop $PM2_APP_NAME || true
            pm2 start npm --name \"$PM2_APP_NAME\" -- run start -- -p 3000
          '"
